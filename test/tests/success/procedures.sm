// true
// true
// true
/*
9
8
7
*/
/*
1
2
ttest
test
testtext
test
3
x
y
this test
null
a
b
a
a
55
1
9
8
7
1
1
1
1
*/

program {
    var a: string = "test";
    var b: string = "text";
    var c: int = 1;
    var d: string = "t";
    var e: string = "a";
    var f: string = "b";
    proc inc(x: ref int) {
        x = x + 1;
    }
    proc test(a: ref string) {
        a = a + "test";
    }
    proc test_text() {
        if (a == "test") {
            a = a + b;
        } else {
            a = "test";
        }
    }
    proc x() {
        output "x";
    }
    proc y() {
        output "y";
    }
    func t(): proc(ref int) {
        inc
    }
    proc printConcat(a: string, b: string) {
        output a + " " + b;
    }
    proc printNull() {
        output "null";
    }
    proc copy(a: ref string, b: ref string) {
        b = a;
    }
    proc manySum(_1: int, _2: int ,_3: ref int, _4: int, _5: int, _6: int, _7: int, _8: int, _9: int, _10: int) {
        var a: int = _1 + _2 + _3;
        var b: int = _4 + _5 + _6;
        var c: int = _7 + _8 + _9 + _10;
        var d: int = a + b + c;
        output d;
    }
    proc override(a: int, a: int) {
        output a;
    }
    rec proc readOut(x: int) {
        if (x != 0) {
            output read;
            readOut(x - 1);
        }
    }
    rec proc recOverride(recOverride: int, x: int) {
        if(x != 0) {
            recOverride(1, x - 1);
        }
        output 1;
    }

    output c; // 1
    inc(c);
    output c; // 2
    test(d);
    output d; // ttest
    output a; // test
    test_text();
    output a; // testtext
    test_text();
    output a; // test
    t()(c);
    output c; // 3
    (true ? x : y)(); // x
    (false ? x : y)(); // y
    printConcat("th" + "is", "te" + "st"); // this test
    printNull(); // null
    output e; // a
    output f; // b
    copy(e, f);
    output e; // a
    output f; // a
    manySum(1, 2, c, 4, 5, 6, 7, 8, 9, 10); // 55
    override(1, 2); // 1
    readOut(3); // 9\n8\n7
    recOverride(1,3); // 1\n1\n1\n1
}