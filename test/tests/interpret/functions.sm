// true
// true
/**/
/*
15
-1
1
-1
1
12\.5
13\.5
3\.0
20
11
2
1
2
1
1
1
8
7
6
2
15
13
1
*/

program {
    var a = 5;
    const b = 6;
    var i = 1;
    var j = 2;
    func add10(x) {
        x + 10
    }

    func sign(x) {
        x < 0 ? -1 : 1
    }

    func add11(x) {
        x + a + b
    }

    func double(a) {
        a * 2
    }
    func d(x) {
        add10
    }
    func copy(x, y) {
        valof {
            y = x;
            return x;
        }
    }
    func add(x, y) {
        x + y
    }
    func aOut() {
        a
    }
    func bOut() {
        b
    }
    func override(a, a) {
        a + a
    }
    rec func recSum(x) {
        x <= 0 ? 0 : x + recSum(x - 1)
    }
    rec func fib(x) {
        x <= 1 ? 1 :
            x == 2 ? 1 :
                fib(x - 1) + fib(x - 2)
    }
    rec func recOverride(recOverride, y) {
        y == 1 ? 1 : recOverride(1, y - 1)
    }

    output add10(5); // 15
    output sign(-10); // -1
    output sign(324); // 1
    output sign(-34.2); // -1
    output sign(34.3); // 1
    output add11(1.5); // 12.5
    a = 6;
    output add11(1.5); // 13.5
    output double(1.5); // 3.0
    output d(4)(10); // 20
    output (true ? add10 : double)(1); // 11
    output (false ? add10 : double)(1); // 2
    output i; // 1
    output j; // 2
    output copy(i, j); // 1
    output i; // 1
    output j; // 1
    output add(1 * 4, 8 / 2); // 8
    a = 7;
    output aOut(); // 7
    output bOut(); // 6
    output override(1, 2); // 2
    output recSum(5); // 15
    output fib(7); // 13
    output recOverride(1, 5); // 1
}