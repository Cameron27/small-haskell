// true
// true
// true
/**/
/*
1
2
1
2
1
12
10
10
0
5
1
5
1
4
*/

program {
    var a: int = 1;
    var d: int = 4;

    func allSum(x: int): int {
        valof: int {
            var sum: int = 0;
            var y: int = x;
            while (y > 0) {
                sum = sum + y;
                y = y - 1;
            }

            return sum;
        }
    }

    func allSum2(x: ref int): int {
        valof: int {
            var sum: int = 0;
            while (x > 0) {
                sum = sum + x;
                x = x - 1;
            }

            return sum;
        }
    }

    func add1(x: int): int {
        x + 1
    }

    func add2(x: int): int {
        x + 2
    }

    output valof: int {
        return 1;
    }; // 1

    output valof: int {
        return 1 + 1;
    }; // 2

    output valof: int {
        return a;
    }; // 1

    output valof: int {
        var a: int = 2;
        return a;
    }; // 2
    output a; // 1

    output valof: int {
        var x: int = valof: int {
            var x: int = 5;
            var y: int = 6;
            x = x + y;
            return x;
        };

        return x + 1;
    }; // 12

    output allSum(4); //10

    output allSum2(d); // 10
    output d; // 0

    output valof: int {
        proc x(y: int) {
            return y;
        }

        x(5);
    }; // 5

    output valof: int {
        proc x(y: int) {
            const a: int = valof: int {
                return y;
            };
        }

        x(5);
        return 1;
    }; // 1

    output valof: int {
        proc x(y: int) {
            return y;
        }

        var y: int = valof: int {
            x(5);
        };

        return 10;
    }; // 5

    trap {
        output valof: int {
            output 1;
            escapeto a;
            output 2;
            return 3;
        };
a:  
        output 4;
    } // 1\n4
}